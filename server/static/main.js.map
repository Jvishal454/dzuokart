{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/authentication/authentication.component.ts","./src/app/components/authentication/authentication.component.html","./src/app/components/grid-list/grid-list.component.ts","./src/app/components/grid-list/grid-list.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/sidenav/sidenav.component.ts","./src/app/components/sidenav/sidenav.component.html","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/app/shared/app.service.ts","./src/app/shared/shared/shared.module.ts","./src/app/shared/sidenav.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { TestComponent } from './components/test/test.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home'},\n  { path: 'home', component: HomeComponent },\n  { path: 'electronics', loadChildren: () => import('./modules/electronics/electronics.module').then((m) => m.ElectronicsModule)},\n  { path: 'authentication', component: AuthenticationComponent },\n  { path: 'test', component: TestComponent }\n  \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AppService } from './shared/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dzuokart';\n}\n","<app-header></app-header>\n<app-sidenav></app-sidenav>\n<div style=\"margin-top: 55px;position: relative; height: 100%; z-index: 2;\">\n  <router-outlet> </router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { SharedModule } from './shared/shared/shared.module';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { GridListComponent } from './components/grid-list/grid-list.component';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { TestComponent } from './components/test/test.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    SidenavComponent,\n    GridListComponent,\n    AuthenticationComponent,\n    TestComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n\n    SharedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { FloatLabelType } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})\nexport class AuthenticationComponent implements OnInit {\n  isLoginVisible = true; // Initialize with login UI visible\n  isSignUpVisible = false;\n  hide = true;\n\n  login: FormGroup;\n  signup: FormGroup;\n\n  // hideRequiredControl = new FormControl(false);\n  // floatLabelControl = new FormControl('auto' as FloatLabelType);\n  // login = this._formBuilder.group({\n  //   hideRequired: this.hideRequiredControl,\n  //   floatLabel: this.floatLabelControl,\n  // });\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ){\n    this.registerIcons();\n\n    this.login = this.fb.group({\n      username: ['', Validators.required], \n      password: ['', Validators.required],\n    });\n\n    this.signup = this.fb.group({\n      fullname: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  // handling scrollabr overflow\n  ngOnInit(): void {\n    document.body.style.overflow = 'hidden'\n  }\n\n  //Remove style on destroy\n  ngOnDestroy(): void {\n    document.body.style.removeProperty('overflow')\n  }\n  \n\n  registerIcons(){\n    const icons = {\n      'google': 'assets/images/login/google.svg',\n      'facebook': 'assets/images/login/facebook.svg'\n    }\n    for (const [iconName, iconPath] of Object.entries(icons)) {\n      this.matIconRegistry.addSvgIcon(\n      iconName,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(iconPath)\n      );\n      }\n  }\n\n  \n\n  // Create methods to toggle the states\n  showLogin() {\n    this.isLoginVisible = true;\n    this.isSignUpVisible = false;\n  }\n\n  showSignUp() {\n    this.isSignUpVisible = true;\n    this.isLoginVisible = false;\n  }\n\n  submitForm() {\n    if (this.login.valid) {\n      const username = this.login.get('username').value;\n      const password = this.login.get('password').value;\n\n      console.log('Username:', username);\n      console.log('Password:', password);\n    }\n    else {\n        this.openSnackBar('Please Fill in the Fields', 'close')\n    }\n  }\n\n  signupForm(){\n    if (this.signup.valid) {\n      const fullname = this.signup.get('fullname').value;\n      const email = this.signup.get('email').value;\n      const password = this.signup.get('password').value;\n\n      console.log('Username:', fullname);\n      console.log('Email', email);\n      console.log('Password:', password);\n    }\n    else {\n        this.openSnackBar('Please Fill in the Signup Fields', 'close')\n    }\n  }\n  \n  // general snackbar \n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n    });\n  }\n\n  loginGoogle(){\n    this.openSnackBar('Google Login under construction', 'close');\n  }\n\n  loginFacebook(){\n    this.openSnackBar('Facebook Login under construction', 'close');\n  }\n\n  // getFloatLabelValue(): FloatLabelType {\n  //   return this.floatLabelControl.value || 'auto';\n  // }\n}\n","<div class=\"container\">\n    <div class=\"card-class\">\n        <mat-card class=\"card\">\n            <div class=\"btn-div\">\n                <button mat-raised-button (click)=\"showLogin()\" [class.selected-btn]=\"isLoginVisible\">Login</button>\n                <button mat-raised-button (click)=\"showSignUp()\" [class.selected-btn]=\"isSignUpVisible\">Signup</button>\n            </div>\n            <div class=\"card-col-1\" *ngIf=\"isLoginVisible\">\n              <img src=\"assets\\images\\login\\login-3.svg\" alt=\"freelancer\" draggable=\"false\">\n            </div>\n            <div class=\"card-col-2\" *ngIf=\"isLoginVisible\">\n                <div>\n                    <p class=\"para\">Login</p>\n                </div>\n                <div class=\"form-class\">\n                    <form [formGroup]=\"login\" >\n                        <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"true\">\n                            <mat-label>User Name</mat-label>\n                            <input matInput formControlName=\"username\">\n                            <mat-icon matPrefix>person</mat-icon>\n                          </mat-form-field>\n                          <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"true\">\n                            <mat-label>Password</mat-label>\n                            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\n                            <mat-icon matPrefix>lock</mat-icon>\n                            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-pressed]=\"hide\">\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                              </button>\n                          </mat-form-field>\n                    </form>\n                    <p class=\"forgot-pass\">Forgot Password?</p>\n                    <button (click)=\"submitForm()\" class=\"login-btn\" mat-raised-button color=\"primary\">Login</button>\n                </div>\n                <div class=\"divider\">\n                    <mat-divider style=\"background-color: brown;\"></mat-divider>\n                    <button mat-raised-button (click)=\"loginGoogle()\"> \n                        <mat-icon matPrefix svgIcon=\"google\"></mat-icon>\n                        <span>Login with Google</span>\n                    </button>\n                    <button mat-raised-button (click)=\"loginFacebook()\"> \n                        <mat-icon matPrefix svgIcon=\"facebook\"></mat-icon>\n                        <span>Login with Facebook</span>\n                    </button>\n                    <p class=\"toggle-other\" (click)=\"showSignUp()\" [class.selected-btn]=\"isSignUpVisible\">Need an Account? Signup</p>\n                </div>\n            </div>\n\n\n            <div class=\"card-col-1\" *ngIf=\"isSignUpVisible\">\n                <img src=\"assets\\images\\login\\login-5.svg\" alt=\"freelancer\" draggable=\"false\">\n            </div>\n            <div class=\"card-col-2\" *ngIf=\"isSignUpVisible\">\n                <div>\n                    <p class=\"para\">Signup</p>\n                </div>\n                <div class=\"form-class\">\n                    <form [formGroup]=\"signup\" >\n                        <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"true\">\n                            <mat-label>Fullname</mat-label>\n                            <input matInput formControlName=\"fullname\">\n                            <mat-icon matPrefix>person</mat-icon>\n                          </mat-form-field>\n                        <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"true\">\n                            <mat-label>Email</mat-label>\n                            <input matInput formControlName=\"email\">\n                            <mat-icon matPrefix>email</mat-icon>\n                          </mat-form-field>\n                          <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"true\">\n                            <mat-label>Password</mat-label>\n                            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\n                            <mat-icon matPrefix>lock</mat-icon>\n                            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-pressed]=\"hide\">\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                              </button>\n                          </mat-form-field>\n                    </form>\n                    <!-- <p class=\"forgot-pass\">Forgot Password?</p> -->\n                    <button (click)=\"signupForm()\" class=\"login-btn\" mat-raised-button color=\"primary\">Signup</button>\n                </div>\n                <div class=\"divider\">\n                    <mat-divider style=\"background-color: brown;\"></mat-divider>\n                    <!-- <button mat-raised-button (click)=\"loginGoogle()\"> \n                        <mat-icon matPrefix svgIcon=\"google\"></mat-icon>\n                        <span>Login with Google</span>\n                    </button>\n                    <button mat-raised-button (click)=\"loginFacebook()\"> \n                        <mat-icon matPrefix svgIcon=\"facebook\"></mat-icon>\n                        <span>Login with Facebook</span>\n                    </button> -->\n                    <p class=\"toggle-other\" (click)=\"showLogin()\" [class.selected-btn]=\"isLoginVisible\">Already have an Account? Login </p>\n                </div>\n            </div>\n          </mat-card>\n    </div>\n\n\n    <!-- SVG hard positioned  -->\n    <div class=\"login-svg\">\n        <img src=\"assets\\images\\login\\freelancer.png\" alt=\"freelancer\" draggable=\"false\">\n    </div>\n    <div class=\"login-svg-2\">\n        <img src=\"assets\\images\\work\\work-4.png\" alt=\"freelancer\" draggable=\"false\">\n    </div>\n</div>","import { Component } from '@angular/core';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  src: string;\n}\n\n\n@Component({\n  selector: 'app-grid-list',\n  templateUrl: './grid-list.component.html',\n  styleUrls: ['./grid-list.component.scss']\n})\nexport class GridListComponent {\n  tiles: Tile[] = [\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 3, rows: 1, color: '#BAE2D9'},\n    {src: 'assets/images/shop/shop-2.png', cols: 1, rows: 2, color: '#BAE2D9'},\n    {src: 'assets/images/shop/shop-4.png', cols: 1, rows: 1, color: '#EF1C74'},\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 2, rows: 1, color: '#F4634A'},\n  ];\n\n}\n","<div class=\"container\">\n    <div class=\"carousel-div\">\n      <mat-grid-list cols=\"4\" rowHeight=\"7rem\" class=\"grid-list\">\n        <mat-grid-tile colspan=\"3\" rowspan=\"1\" style=\"border: #d77281 solid ;\">\n          <div class=\"row-1\">\n            col 1\n          </div>\n          <div class=\"row-1\">\n            col 2\n          </div>\n          <div class=\"row-1\">\n            col 3\n          </div>\n          <div class=\"row-1\">\n            col 4\n          </div>\n          <div class=\"row-1\">\n            col 5\n          </div>\n          <div class=\"row-1\">\n            col 6\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile colspan=\"1\" rowspan=\"2\" style=\"background-color: rgb(157, 65, 203);\">\n          <div class=\"col-2\">\n            <img src=\"assets\\images\\shop\\shop-2.png\">\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile colspan=\"1\" rowspan=\"1\" style=\"border: #d77281 solid ; \">\n          <div class=\"row-2\">\n            row 2 col 1\n          </div>\n          <div class=\"row-2\">\n            row 2 col 1\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile colspan=\"2\" rowspan=\"1\" style=\"border: #d77281 solid ;\" >\n         <div class=\"col2-row2\" routerLink=\"/electronics/laptops\"> <img src=\"assets\\images\\laptops\\laptop-2.png\" >\n            <div class=\"cover\">\n              <h3>Laptops</h3>\n            </div>\n        </div> \n         <div class=\"col2-row2\" routerLink=\"/electronics/cell-phones\"> <img src=\"assets\\images\\mobiles\\mobile-3.png\" > \n          <div class=\"cover\">\n            <h3>Mobiles</h3>\n          </div>\n        </div> \n         <div class=\"col2-row2\"> <img src=\"assets\\images\\tv\\tv-9.png\" >\n          <div class=\"cover\">\n            <h3>TV's</h3>\n          </div>\n        </div> \n         <div class=\"col2-row2\"> <img src=\"assets\\images\\shop\\shop-5.png\" > </div> \n         <div class=\"col2-row2\"> <img src=\"assets\\images\\shop\\shop-1.png\" > </div> \n         <div class=\"col2-row2\"> <img src=\"assets\\images\\delivery\\delivery-1.png\" > </div> \n         <div class=\"col2-row2\"> <img src=\"assets\\images\\delivery\\delivery-2.png\" > </div> \n        </mat-grid-tile>\n      </mat-grid-list>\n      \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { AppService } from 'src/app/shared/app.service';\nimport { SidenavService } from 'src/app/shared/sidenav.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private appService: AppService,\n    private sidenavService: SidenavService\n    ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  toggleMenu(){\n    this.sidenavService.toggleSidenav();\n  }\n \n  // toggleMenu(){\n  //   this.appService.sidenav.toggle()\n  // }\n  // toggleMenu() {\n  //   console.log('appService:', this.appService);\n  //   console.log('sidenav:', this.appService.sidenav);\n  //   if (this.appService.sidenav) {\n  //     this.appService.sidenav.toggle();\n  //   } else {\n  //     console.error('sidenav is undefined');\n  //   }\n  // }\n  \n\n}\n\n\n","<div>\n\n<p>\n    <mat-toolbar class=\"toolbar mat-elevation-z2\">\n      <button mat-icon-button class=\"example-icon\" (click)=\"toggleMenu()\" matTooltip=\"Menu\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span class=\"mr-2 sm:mr-2 md:mr-2 lg:mr-2 xl:mr-2 link white-color\" routerLink=\"home\" >DzuoKart</span>\n       <mat-icon class=\"favorite-icon tool-icon running-cart\">shopping_cart</mat-icon>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon favorite-icon\" >\n        <mat-icon>settings</mat-icon>\n      </button>\n\n      <!-- Lazy rendereing using template -->\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon>person</mat-icon>\n      </button>\n      <mat-menu #appMenu=\"matMenu\" class=\"mat-menuu\">\n        <ng-template matMenuContent>\n          <button mat-menu-item routerLink=\"/authentication\">\n            <mat-icon>person</mat-icon>\n            <span>Login</span>\n          </button>\n          <button mat-menu-item>\n            <mat-icon>dialpad</mat-icon>\n            <span>Redial</span>\n          </button>\n          <button mat-menu-item>\n            <mat-icon>settings</mat-icon>\n            <span>Settings</span>\n          </button>\n        </ng-template>\n      </mat-menu>\n      \n      \n    </mat-toolbar>\n  </p>\n    \n</div>","import { Component } from '@angular/core';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  src: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  tiles: Tile[] = [\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 3, rows: 1, color: 'lightgreen'},\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 1, rows: 2, color: 'dodgerblue'},\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 1, rows: 1, color: '#EAC562'},\n    {src: 'assets/images/home-carousel/grid-1.jpg', cols: 2, rows: 1, color: '#EF1C74'},\n  ];\n\n}\n","<!-- <h1 class=\"text-3xl font-bold underline\">\n    Home Works!\n  </h1> -->\n  <div class=\"container\">\n    <app-grid-list></app-grid-list>\n    <app-test></app-test>\n  </div>","import { Component, ElementRef, HostListener, OnInit, ViewChild, } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter, map, mergeMap, window } from 'rxjs';\nimport { AppService } from 'src/app/shared/app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SidenavService } from 'src/app/shared/sidenav.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @ViewChild('sidenav') sidenav: MatSidenav; \n\n  constructor(\n    private appService: AppService,\n    private sidenavService: SidenavService\n    ) { }\n\n  navOpen: boolean = false; //need to change to false for default\n  windowHeight: any;\n\n\n  ngOnInit(): void {\n    this.windowHeight = document.body.clientHeight;\n  }\n\n\n  handleSideNavOpenStart(){\n    this.navOpen = true;\n  }\n\n  handleSideNavStateChange(navOpen: boolean){\n    if(this.navOpen == true) {\n      this.navOpen = navOpen;\n    }\n  }\n\n  // Create a getter for the Sidenav state\n  get isSidenavOpen(): boolean {\n    return this.sidenavService.getSidenavState();\n  }\n\n}\n","<div class=\"app-nav-container\" [ngClass]=\"{'app-nav-open': navOpen}\">\n    <mat-sidenav-container [hasBackdrop]=\"false\">\n        <mat-sidenav #sidenav mode=\"over\" [class.mat-elevation-z4]=\"true\" class=\"app-sidenav\" [opened]=\"isSidenavOpen\"\n            (openedStart)=\"handleSideNavOpenStart()\" (openedChange)=\"handleSideNavStateChange($event)\">\n            <mat-nav-list>\n                <div class=\"dropdown\">\n                    <mat-list-item>\n                        <section>abc</section>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <section><button mat-raised-button color=\"primary\">click</button></section>\n                    </mat-list-item>\n                </div>\n            </mat-nav-list>\n        </mat-sidenav>\n    </mat-sidenav-container>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/shared/product.model';\nimport { AppService } from 'src/app/shared/app.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  products;\n  showViewAllButton = false;\n\n  constructor(\n    private appService: AppService\n  ) {}\n\n  ngOnInit(): void {\n    // this.appService.getProducts().subscribe((data) => {\n      // this.products = data;\n      // Convert data to an array if it's an object\n    // if (data instanceof Object) {\n    //   this.products = Object.values(data);\n    // } else {\n    //   this.products = data;\n    // }\n\n    // Slice the array to get the first 10 items\n    // this.products = this.products.slice(0, 12);\n    //   console.log(this.products);\n    //   this.showViewAllButton = this.products.length > 6; // Adjust based on your layout\n    // });\n\n\n    this.appService.getMProducts().subscribe((data) => {\n      console.log('mongo products', data);\n      if (data instanceof Object) { \n        this.products = Object.values(data);\n      } else {\n        this.products = data;\n      }\n  \n\n    })\n  }\n\n  goToProductsPage(): void {\n    // Implement navigation to the Products page\n  }\n\n  viewProductDetails(product: Product): void {\n    // Implement navigation to the Product Details page and pass the product data\n    console.log(product);\n  }\n}\n","<div class=\"container\">\n    <div class=\"product-grid\">\n      <mat-card\n        *ngFor=\"let product of products\"\n        class=\"product-card\"\n        (click)=\"viewProductDetails(product)\"\n      ><div class=\"prod-img\">\n        <img [src]=\"product.image\" alt=\"{{product.title}}\" draggable=\"false\" >\n      </div>\n      <div class=\"product-details\">\n        <p >{{ product.title }}</p>\n        <span> {{ product.ratings.rate }} <mat-icon>hotel_class</mat-icon></span>\n        <p> ₹{{product.price}}</p>\n      </div>\n      </mat-card>\n    </div>\n    \n    <div *ngIf=\"showViewAllButton\" class=\"view-all-button\">\n      <button mat-raised-button color=\"primary\" (click)=\"goToProductsPage()\">View All</button>\n    </div>\n  </div>\n  ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  sidenav: MatSidenav;\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(){\n    let url = `https://fakestoreapi.com/products`;\n    return this.http.get(url);\n  }\n\n  getMProducts(){\n    let url = `/api/data/getProducts`;\n    return this.http.get(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    MatTabsModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRippleModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatStepperModule,\n\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatCardModule,\n    MatAutocompleteModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    MatTabsModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRippleModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatStepperModule,\n\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatCardModule,\n    MatAutocompleteModule\n  ]\n})\nexport class SharedModule { }","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  private isSidenavOpen = false;\n\n  toggleSidenav() {\n    this.isSidenavOpen = !this.isSidenavOpen;\n  }\n\n  getSidenavState() {\n    return this.isSidenavOpen;\n  }\n\n  constructor() { }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","AuthenticationComponent","TestComponent","routes","path","pathMatch","redirectTo","component","loadChildren","then","m","ElectronicsModule","AppRoutingModule","forRoot","useHash","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","BrowserModule","HeaderComponent","BrowserAnimationsModule","SharedModule","SidenavComponent","GridListComponent","AppModule","bootstrap","declarations","Validators","ɵɵtext","ɵɵlistener","AuthenticationComponent_div_9_Template_button_click_18_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","hide","AuthenticationComponent_div_9_Template_button_click_23_listener","ctx_r6","submitForm","AuthenticationComponent_div_9_Template_button_click_27_listener","ctx_r7","loginGoogle","AuthenticationComponent_div_9_Template_button_click_31_listener","ctx_r8","loginFacebook","AuthenticationComponent_div_9_Template_p_click_35_listener","ctx_r9","showSignUp","ɵɵadvance","ɵɵproperty","ctx_r1","login","ɵɵattribute","ɵɵtextInterpolate","ɵɵclassProp","isSignUpVisible","AuthenticationComponent_div_11_Template_button_click_24_listener","_r11","ctx_r10","AuthenticationComponent_div_11_Template_button_click_27_listener","ctx_r12","signupForm","AuthenticationComponent_div_11_Template_p_click_31_listener","ctx_r13","showLogin","ctx_r3","signup","isLoginVisible","fb","snackBar","matIconRegistry","domSanitizer","registerIcons","group","username","required","password","fullname","email","ngOnInit","document","body","style","overflow","ngOnDestroy","removeProperty","icons","iconName","iconPath","Object","entries","addSvgIcon","bypassSecurityTrustResourceUrl","valid","get","value","console","log","openSnackBar","message","action","open","duration","verticalPosition","horizontalPosition","ɵɵdirectiveInject","FormBuilder","i2","MatSnackBar","i3","MatIconRegistry","i4","DomSanitizer","AuthenticationComponent_Template","AuthenticationComponent_Template_button_click_4_listener","AuthenticationComponent_Template_button_click_6_listener","ɵɵtemplate","AuthenticationComponent_div_8_Template","AuthenticationComponent_div_9_Template","AuthenticationComponent_div_10_Template","AuthenticationComponent_div_11_Template","tiles","src","cols","rows","color","GridListComponent_Template","appService","sidenavService","toggleMenu","toggleSidenav","AppService","SidenavService","HeaderComponent_Template","HeaderComponent_Template_button_click_3_listener","HeaderComponent_ng_template_19_Template","_r0","HomeComponent_Template","navOpen","windowHeight","clientHeight","handleSideNavOpenStart","handleSideNavStateChange","isSidenavOpen","getSidenavState","viewQuery","SidenavComponent_Query","SidenavComponent_Template_mat_sidenav_openedStart_2_listener","SidenavComponent_Template_mat_sidenav_openedChange_2_listener","$event","ɵɵpureFunction1","_c1","TestComponent_mat_card_2_Template_mat_card_click_0_listener","restoredCtx","_r4","product_r2","$implicit","viewProductDetails","ɵɵpropertyInterpolate","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","ratings","rate","price","TestComponent_div_3_Template_button_click_1_listener","_r6","ctx_r5","goToProductsPage","showViewAllButton","getMProducts","subscribe","data","products","values","product","TestComponent_Template","TestComponent_mat_card_2_Template","TestComponent_div_3_Template","http","getProducts","url","ɵɵinject","HttpClient","factory","ɵfac","providedIn","CommonModule","MatTabsModule","MatButtonModule","MatProgressBarModule","MatFormFieldModule","MatInputModule","MatCheckboxModule","MatTableModule","MatSortModule","MatPaginatorModule","MatSnackBarModule","MatDialogModule","MatProgressSpinnerModule","MatDatepickerModule","MatGridListModule","MatSelectModule","MatRadioModule","MatToolbarModule","MatSidenavModule","MatIconModule","MatCardModule","MatMenuModule","MatTooltipModule","MatExpansionModule","MatListModule","FormsModule","ReactiveFormsModule","HttpClientModule","MatStepperModule","MatAutocompleteModule","MatNativeDateModule","MatRippleModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}